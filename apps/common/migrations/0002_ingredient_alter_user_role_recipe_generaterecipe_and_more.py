# Generated by Django 5.1.7 on 2025-03-18 05:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('vegetable', 'Vegetable'), ('fruit', 'Fruit'), ('meat', 'Meat'), ('dairy', 'Dairy'), ('grain', 'Grain'), ('other', 'Other')], default='other', max_length=20)),
                ('calories_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('protein_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('carbs_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fats_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('generaluser', 'General User'), ('chef', 'Chef')], default='default', max_length=20),
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instruction', models.TextField()),
                ('cook_time', models.PositiveIntegerField(help_text='Time in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('category', models.CharField(choices=[('veg', 'Vegetarian'), ('nonveg', 'Non-Vegetarian')], default='veg', max_length=20)),
                ('recipe_image', models.ImageField(blank=True, null=True, upload_to='recipe_images/')),
                ('ai_generated', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GenerateRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_input_ingredients', models.TextField(help_text='Comma-separated list of ingredients')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_recipes', to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity in standard units')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ratings', to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='common.recipe')),
            ],
            options={
                'unique_together': {('recipe', 'user')},
            },
        ),
    ]
